# Sample workflow for building and deploying a VitePress site to GitHub Pages
#
name: Build VitePress site to Pages

on:
  # Runs on pushes targeting the `main` branch. Change this to `master` if you're
  # using the `master` branch as the default branch.
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled

      - uses: pnpm/action-setup@v3 # Uncomment this block if you're using pnpm
        with:
          version: 9 # Not needed if you've set "packageManager" in package.json
      # - uses: oven-sh/setup-bun@v1 # Uncomment this if you're using Bun

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm # or pnpm / yarn

      # - name: Setup Pages
      #   uses: actions/configure-pages@v4

      - name: Install dependencies
        run: pnpm install # or pnpm install / yarn install / bun install

      - name: Build with VitePress
        run: pnpm run build # or pnpm docs:build / yarn docs:build / bun run docs:build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      # - name: Push built files to deploy repo
      #   env:
      #     DEPLOY_REPO: ${{ secrets.DEPLOY_REPO }}
      #     DEPLOY_BRANCH: main
      #     SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_DEPLOY_KEY }}
      #   run: |
      #     # SSH
      #     mkdir -p ~/.ssh
      #     echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
      #     chmod 600 ~/.ssh/id_rsa
      #     ssh-keyscan github.com >> ~/.ssh/known_hosts

      #     git config --global user.name "Cong Minh"
      #     git config --global user.email "ndmc.system176@gmail.com"

      #     # Lấy commit hash và tạo link đến repo gốc
      #     COMMIT_HASH=$(git rev-parse --short HEAD)
      #     COMMIT_URL="${{secrets.CURRENT_REPO}}/commit/$COMMIT_HASH"

      #     git clone --depth=1 --branch=$DEPLOY_BRANCH $DEPLOY_REPO deploy-repo
      #     find deploy-repo -mindepth 1 ! -name 'README.md' ! -name '.git' ! -path 'deploy-repo/.git/*' -delete
      #     mkdir deploy-repo/docs
      #     cp -r dist/* deploy-repo/docs/
      #     cd deploy-repo

      #     git add .
      #     git commit -m "[\`$COMMIT_HASH\`]($COMMIT_URL)" || echo "No changes to commit"
      #     git push origin $DEPLOY_BRANCH

  # bỏ comment nếu muốn deploy trực tiếp
  # Deployment job

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
